# -*- coding: utf-8 -*-
"""MWA Phishing Detection

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yOAQb2apOINxWMBnJptmY4a0jdJQDhBV
"""

!pip install openai==0.28
!pip install datasets
!pip install requests
!pip install requests beautifulsoup4 selenium
!pip install pandas pillow tqdm
!pip install google-generativeai

"""# TEST SCRIPTS"""

from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive')

"""### Gemini Model"""

#PHISHING

import os
import json
import csv
from google.colab import drive
import google.generativeai as genai

# Mount Google Drive
drive.mount('/content/drive')

# Set your API key
genai.configure(api_key="")

# Define the function
def analyze_phishing_with_cot(html_content, image_url):
    # Few-shot examples
    few_shot_prompt = """

Example 1
Url: https://www.bankofamerica.com/login
HTML Data: title: Bank of America - Online Banking Login
meta_description: Secure login to your Bank of America account. favicon:
https://www.bankofamerica.com/favicon.ico logo_alt_text: Bank of America
Logo footer_text: © 2024 Bank of America. All rights reserved.
headers_text: Personal | Business | Small Business | Community Banking
nav_bar_content: Home | Services | Contact Us | Support paragraphs_text:
Welcome to Bank of America. Please enter your login credentials below to
access your account. span_text: Forgot Username? | Forgot Password? |
Help Center | Privacy Policy
Screenshot Info: The Bank of America logo is clear and matches the
official branding. The login form is professionally designed with fields for
username and password. The "Sign In" button uses Bank of America's
official color scheme. The footer contains legitimate Bank of America links
and legal information.
Brand Recognition Analysis: The page uses the official Bank of
America logo with correct alt text. The URL matches the official Bank of
America domain with HTTPS protocol. All branding elements are consistent
with Bank of America's official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Bank of America communications. There is no excessive
capitalization or urgent language. Instructions for logging in are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Bank of America’s
official login page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. The branding elements are consistent and legitimate.
2. The URL matches the official Bank of America domain with secure
HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 2
Url: https://secure-appleid-login.com/
HTML Data: title: Apple ID Login meta_description: Sign in to your
Apple ID account. favicon: https://www.apple.com/favicon.ico logo_alt_text:
Apple Logo footer_text: Not Found headers_text: Home | Support | Account |
Privacy nav_bar_content: Not Found paragraphs_text: Enter your Apple ID
and password to sign in. span_text: Forgot Apple ID? | Forgot Password? |
Sign Up
Screenshot Info: The Apple logo is high-resolution and matches official
branding. The login form includes fields for Apple ID and password. The
"Sign In" button is styled with Apple's official colors. The footer lacks
additional information and links typically found on Apple's official site.
Brand Recognition Analysis: The page uses the official Apple logo
with correct alt text. The URL ("secure-appleid-login.com") is not an official
Apple domain. HTTPS protocol is absent, which is unusual for Apple’s
official login pages.
Diction and Syntax Analysis: The language is straightforward without
excessive capitalization. Instructions are clear and mimic official Apple
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements largely mimic Apple’s official login
page. However, the absence of additional footer links and the domain
discrepancy raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Apple logo.
2. The URL does not match Apple’s official domain and lacks HTTPS.
3. Missing footer elements typical of Apple's official site suggest
phishing.
Classification: PHISHING

Example 3
Url: https://www.netflix.com/billing-update
HTML Data: title: Netflix - Update Your Billing Information
meta_description: Securely update your billing details for uninterrupted
service. favicon: https://www.netflix.com/favicon.ico logo_alt_text: Netflix
Logo footer_text: © 2024 Netflix, Inc. headers_text: Home | TV Shows |
Movies | Latest nav_bar_content: Not Found paragraphs_text: To continue
enjoying Netflix, please update your billing information below. span_text:
Need Help? | Contact Support | Privacy Policy
Screenshot Info: The Netflix logo is high-resolution and matches official
branding. The billing update form includes fields for credit card information
and billing address. The "Update Billing" button is styled with Netflix's
official red color. The footer contains legitimate Netflix links and legal
information.
Brand Recognition Analysis: The page uses the official Netflix
logo with correct alt text. The URL ("netflix.com/billing-update") uses the
official Netflix domain with HTTPS protocol. All branding elements are
consistent with Netflix's official style.
Diction and Syntax Analysis: The language is professional and consistent
with official Netflix communications. There is no excessive capitalization or
urgent language. Instructions for updating billing information are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Netflix’s official billing
update page. The design is professional, and all elements are consistent
with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Netflix domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 4
Url: http://www.paypalsecure-login.net/
HTML Data: title: PayPal Secure Login meta_description: Access your
PayPal account securely. favicon: https://www.paypal.com/favicon.ico
logo_alt_text: PayPal Logo footer_text: Not Found headers_text: Home |
Send & Request | Wallet | Security nav_bar_content: Not Found
paragraphs_text: Please enter your PayPal credentials to continue.
span_text: Forgot Password? | Sign Up | Help Center
Screenshot Info: The PayPal logo appears sharp and matches the official
branding. The login form is centered with fields for email and password.
The "Login" button uses PayPal's official blue color. The footer lacks
additional information and links typically found on PayPal's official site.
Brand Recognition Analysis: The page uses the official PayPal
logo with correct alt text. The URL ("paypalsecure-login.net") is not an
official PayPal domain and uses HTTP instead of HTTPS.
Diction and Syntax Analysis: The language is professional with no excessive
capitalization. Instructions are clear and similar to official PayPal
communications. No urgent or threatening language is detected.
Screenshot Analysis: Visual elements mimic PayPal’s official login page.
However, the domain name discrepancy and lack of secure HTTPS protocol
raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct PayPal logo.
2. The URL does not match PayPal’s official domain and lacks HTTPS.
3. Missing footer elements typical of PayPal's official site suggest
phishing.
Classification: PHISHING

Example 5
Url: https://www.amazon.com/gp/help/customer/display.html
HTML Data: title: Amazon Customer Service meta_description: Find
solutions to your Amazon account issues. favicon:
https://www.amazon.com/favicon.ico logo_alt_text: Amazon Logo footer_text:
© 2024 Amazon.com, Inc. or its affiliates headers_text: Your Orders | Login |
Cart nav_bar_content: Help | Returns & Replacements | Manage Your
Content paragraphs_text: How can we assist you today? Please select a
topic below to find the help you need. span_text: Contact Us | Help Center |
Privacy Notice
Screenshot Info: The Amazon logo is clear and matches the official
branding. The customer service options are neatly organized with dropdown
menus. The "Contact Us" button uses Amazon's official orange color. The
footer contains legitimate Amazon links and legal information.
Brand Recognition Analysis: The page uses the official Amazon
logo with correct alt text. The URL matches the official Amazon domain with
HTTPS protocol. All branding elements are consistent with Amazon's official
style.
Diction and Syntax Analysis: The language is professional and consistent
with official Amazon communications. There is no excessive capitalization or
urgent language. Instructions for accessing customer service are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Amazon’s official
customer service page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Amazon domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 6
Url: https://www.facebook-login-secure.com/
HTML Data: title: Facebook - Secure Login meta_description: Log in
to your Facebook account securely. favicon:
https://www.facebook.com/favicon.ico logo_alt_text: Facebook Logo
footer_text: Not Found headers_text: Home | About | Jobs | Help
nav_bar_content: Not Found paragraphs_text: Please enter your Facebook
credentials to continue. span_text: Forgot Password? | Create New Account
| Help Center
Screenshot Info: The Facebook logo is high-resolution and matches official
branding. The login form includes fields for email and password. The "Log
In" button is styled with Facebook's official blue color. The footer lacks
additional information and links typically found on Facebook's official site.
Brand Recognition Analysis: The page uses the official Facebook
logo with correct alt text. The URL ("facebook-login-secure.com") is not an
official Facebook domain and uses HTTPS, which is misleading.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Facebook
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Facebook’s official login page.
However, the domain discrepancy and missing footer links raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Facebook logo.
2. The URL does not match Facebook’s official domain despite using
HTTPS.
3. Missing footer elements typical of Facebook's official site suggest
phishing.
Classification: PHISHING

Example 7
Url: https://www.microsoft.com/en-us/account/
HTML Data: title: Microsoft Account Sign In meta_description: Access
your Microsoft account securely. favicon:
https://www.microsoft.com/favicon.ico logo_alt_text: Microsoft Logo
footer_text: © 2024 Microsoft. All rights reserved. headers_text: Products |
Solutions | Support | Company nav_bar_content: Not Found
paragraphs_text: Sign in to your Microsoft account to access your services.
span_text: Forgot my password | Create one! | Need help?
Screenshot Info: The Microsoft logo is clear and matches official branding.
The login form is professionally designed with fields for email and
password. The "Sign In" button uses Microsoft's official color scheme. The
footer contains legitimate Microsoft links and legal information.
Brand Recognition Analysis: The page uses the official Microsoft
logo with correct alt text. The URL matches the official Microsoft domain
with HTTPS protocol. All branding elements are consistent with Microsoft’s
official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Microsoft communications. There is no excessive capitalization or
urgent language. Instructions for signing in are clear and straightforward.
Screenshot Analysis: Visual elements closely match Microsoft’s official
account sign-in page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Microsoft domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 8
Url: http://www.instagram-loginpage.org/
HTML Data: title: Instagram - Login meta_description: Log in to your
Instagram account. favicon: https://www.instagram.com/favicon.ico
logo_alt_text: Instagram Logo footer_text: Not Found headers_text: Home |
About | Blog | Careers nav_bar_content: Not Found paragraphs_text: Enter
your Instagram username and password to continue. span_text: Forgot
Password? | Sign Up | Help Center
Screenshot Info: The Instagram logo is high-resolution and matches
official branding. The login form includes fields for username and password.
The "Log In" button is styled with Instagram's official colors. The footer
lacks additional information and links typically found on Instagram's official
site.
Brand Recognition Analysis: The page uses the official Instagram
logo with correct alt text. The URL ("instagram-loginpage.org") is not an
official Instagram domain and uses HTTP instead of HTTPS, which is
unusual for Instagram’s official login pages.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Instagram
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Instagram’s official login page.
However, the domain discrepancy and lack of secure HTTPS protocol raise
suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Instagram logo.
2. The URL does not match Instagram’s official domain and lacks
HTTPS.
3. Missing footer elements typical of Instagram's official site suggest
phishing.
Classification: PHISHING

    """

    # Current input data
    dynamic_prompt = f"""
    ### Current Input
    #### HTML Content:
    {html_content}
    #### Screenshot URL:
    {image_url}
    """

       # Final Prompt
    full_prompt = f"""
    You are a phishing detection assistant. From a dataset of phishing and benign urls, I will randomly select one and give you HTML and screenshot data from it (The screenshot data will be provided as a URL in a text file. It is your job to read the text file, access the url and analyze the screenshot it leads you to). Use the few shot examples below as guides on how to analyze the input data and determine the phishing risk. Split your analysis into brand recognition analysis, diction and syntax analysis, and screenshot specific analysis. Do not bias your decisions by only looking for aspects indicative of phishing or benign webpages. Look for both equally. Also, consider the absence of phishing aspects as an indicator for potentially benign sites. On the other side, consider the absence of benign aspects as an indicator for potential phishing sites.

    #### Analysis:

    {few_shot_prompt}

    {dynamic_prompt}

    #### Response Format (Follow this template exactly, do not change the words within the asterisks):
    1. *Step-by-Step Reasoning*: [Explain the URL, Brand Recognition, Diction and Syntax, and Screenshot analysis step-by-step, similar to fewshot prompts]
    2. *Phishing Risk (Phishing/Benign)*: [Ex. Classification: PHISHING]
    3. *Key Indicators*: [List diction/syntax observations]
    4. *Confidence Score*: [0.00 to 10.00 scale]
    5. *Supporting Evidence*: [Explanation within 300 words]
    6. *Provide URL*: [Ex. URL: https://www.amazon.com/]
    """


   # Initialize the Gemini model
    model = genai.GenerativeModel('gemini-1.5-pro')

    # Send the request to the Gemini API
    response = model.generate_content(full_prompt)

    # Extract and return the content from the response
    return response.text

# Function to extract the label from the AI response
def extract_label(analysis_result):
    # Look for "Phishing" or "Benign" in the response
    if "PHISHING" in analysis_result:
        return "Phishing"
    elif "BENIGN" in analysis_result:
        return "Benign"
    else:
        return "Unknown"  # Fallback if the label is not found

# Path to the dataset folder
dataset_path = '/content/drive/MyDrive/Ishan_Eval1/ReducedPhishingDataSet'

# Path to the output folder
output_folder_path = '/content/drive/My Drive/PhishingLinksResultsGemini'

# Create the output folder if it doesn't exist
if not os.path.exists(output_folder_path):
    os.makedirs(output_folder_path)
    print(f"Created output folder: {output_folder_path}")

# Path to the CSV file
csv_file_path = os.path.join(output_folder_path, "phishing_resultsGemini1.csv")

# Initialize the CSV file with headers if it doesn't exist
if not os.path.exists(csv_file_path):
    with open(csv_file_path, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        csvwriter.writerow(["URL", "Label"])  # Write header

# Get a list of all folders in the dataset
all_folders = [f for f in os.listdir(dataset_path) if os.path.isdir(os.path.join(dataset_path, f))]

# Traverse through each folder in the dataset
for folder_name in all_folders:
    folder_path = os.path.join(dataset_path, folder_name)

    # Log the folder being processed
    print(f"Processing folder: {folder_name}")

    # Extract HTML content from .json file
    html_content = ""
    image_url = ""

    for file_name in os.listdir(folder_path):
        if file_name.endswith('.json'):
            with open(os.path.join(folder_path, file_name), 'r') as f:
                html_content = json.load(f)
        elif file_name == "image_url.txt":
            with open(os.path.join(folder_path, file_name), 'r') as f:
                image_url = f.read().strip()

    # Analyze the data
    if html_content and image_url:
        analysis_result = analyze_phishing_with_cot(html_content, image_url)

        # Extract the classification (Phishing/Benign) from the AI response
        label = extract_label(analysis_result)

        # Save all data (HTML, Screenshot URL, and AI Response) in a structured format
        result_entry = {
            "folder_name": folder_name,
            "ai_response": analysis_result
        }

        # Save results to a unique file in the output folder
        output_file_path = os.path.join(output_folder_path, f"PHISHING_{folder_name}_results.txt")
        with open(output_file_path, 'w') as f:
            f.write(f"Folder Name: {result_entry['folder_name']}\n")
            f.write(f"AI Response:\n{result_entry['ai_response']}\n\n")

        print(f"Results saved to {output_file_path}")

        # Append the result to the CSV file
        with open(csv_file_path, 'a', newline='') as csvfile:
            csvwriter = csv.writer(csvfile)
            csvwriter.writerow([folder_name, label])  # Append URL and Label

        print(f"Updated CSV file with: {folder_name}, {label}")

print("Analysis complete. All results saved to PhishingLinksResults folder.")

#PBENIGN

import os
import json
import csv
from google.colab import drive
import google.generativeai as genai

# Mount Google Drive
drive.mount('/content/drive')

# Set your API key
genai.configure(api_key="")

# Define the function
def analyze_phishing_with_cot(html_content, image_url):
    # Few-shot examples
    few_shot_prompt = """

Example 1
Url: https://www.bankofamerica.com/login
HTML Data: title: Bank of America - Online Banking Login
meta_description: Secure login to your Bank of America account. favicon:
https://www.bankofamerica.com/favicon.ico logo_alt_text: Bank of America
Logo footer_text: © 2024 Bank of America. All rights reserved.
headers_text: Personal | Business | Small Business | Community Banking
nav_bar_content: Home | Services | Contact Us | Support paragraphs_text:
Welcome to Bank of America. Please enter your login credentials below to
access your account. span_text: Forgot Username? | Forgot Password? |
Help Center | Privacy Policy
Screenshot Info: The Bank of America logo is clear and matches the
official branding. The login form is professionally designed with fields for
username and password. The "Sign In" button uses Bank of America's
official color scheme. The footer contains legitimate Bank of America links
and legal information.
Brand Recognition Analysis: The page uses the official Bank of
America logo with correct alt text. The URL matches the official Bank of
America domain with HTTPS protocol. All branding elements are consistent
with Bank of America's official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Bank of America communications. There is no excessive
capitalization or urgent language. Instructions for logging in are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Bank of America’s
official login page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. The branding elements are consistent and legitimate.
2. The URL matches the official Bank of America domain with secure
HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 2
Url: https://secure-appleid-login.com/
HTML Data: title: Apple ID Login meta_description: Sign in to your
Apple ID account. favicon: https://www.apple.com/favicon.ico logo_alt_text:
Apple Logo footer_text: Not Found headers_text: Home | Support | Account |
Privacy nav_bar_content: Not Found paragraphs_text: Enter your Apple ID
and password to sign in. span_text: Forgot Apple ID? | Forgot Password? |
Sign Up
Screenshot Info: The Apple logo is high-resolution and matches official
branding. The login form includes fields for Apple ID and password. The
"Sign In" button is styled with Apple's official colors. The footer lacks
additional information and links typically found on Apple's official site.
Brand Recognition Analysis: The page uses the official Apple logo
with correct alt text. The URL ("secure-appleid-login.com") is not an official
Apple domain. HTTPS protocol is absent, which is unusual for Apple’s
official login pages.
Diction and Syntax Analysis: The language is straightforward without
excessive capitalization. Instructions are clear and mimic official Apple
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements largely mimic Apple’s official login
page. However, the absence of additional footer links and the domain
discrepancy raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Apple logo.
2. The URL does not match Apple’s official domain and lacks HTTPS.
3. Missing footer elements typical of Apple's official site suggest
phishing.
Classification: PHISHING

Example 3
Url: https://www.netflix.com/billing-update
HTML Data: title: Netflix - Update Your Billing Information
meta_description: Securely update your billing details for uninterrupted
service. favicon: https://www.netflix.com/favicon.ico logo_alt_text: Netflix
Logo footer_text: © 2024 Netflix, Inc. headers_text: Home | TV Shows |
Movies | Latest nav_bar_content: Not Found paragraphs_text: To continue
enjoying Netflix, please update your billing information below. span_text:
Need Help? | Contact Support | Privacy Policy
Screenshot Info: The Netflix logo is high-resolution and matches official
branding. The billing update form includes fields for credit card information
and billing address. The "Update Billing" button is styled with Netflix's
official red color. The footer contains legitimate Netflix links and legal
information.
Brand Recognition Analysis: The page uses the official Netflix
logo with correct alt text. The URL ("netflix.com/billing-update") uses the
official Netflix domain with HTTPS protocol. All branding elements are
consistent with Netflix's official style.
Diction and Syntax Analysis: The language is professional and consistent
with official Netflix communications. There is no excessive capitalization or
urgent language. Instructions for updating billing information are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Netflix’s official billing
update page. The design is professional, and all elements are consistent
with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Netflix domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 4
Url: http://www.paypalsecure-login.net/
HTML Data: title: PayPal Secure Login meta_description: Access your
PayPal account securely. favicon: https://www.paypal.com/favicon.ico
logo_alt_text: PayPal Logo footer_text: Not Found headers_text: Home |
Send & Request | Wallet | Security nav_bar_content: Not Found
paragraphs_text: Please enter your PayPal credentials to continue.
span_text: Forgot Password? | Sign Up | Help Center
Screenshot Info: The PayPal logo appears sharp and matches the official
branding. The login form is centered with fields for email and password.
The "Login" button uses PayPal's official blue color. The footer lacks
additional information and links typically found on PayPal's official site.
Brand Recognition Analysis: The page uses the official PayPal
logo with correct alt text. The URL ("paypalsecure-login.net") is not an
official PayPal domain and uses HTTP instead of HTTPS.
Diction and Syntax Analysis: The language is professional with no excessive
capitalization. Instructions are clear and similar to official PayPal
communications. No urgent or threatening language is detected.
Screenshot Analysis: Visual elements mimic PayPal’s official login page.
However, the domain name discrepancy and lack of secure HTTPS protocol
raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct PayPal logo.
2. The URL does not match PayPal’s official domain and lacks HTTPS.
3. Missing footer elements typical of PayPal's official site suggest
phishing.
Classification: PHISHING

Example 5
Url: https://www.amazon.com/gp/help/customer/display.html
HTML Data: title: Amazon Customer Service meta_description: Find
solutions to your Amazon account issues. favicon:
https://www.amazon.com/favicon.ico logo_alt_text: Amazon Logo footer_text:
© 2024 Amazon.com, Inc. or its affiliates headers_text: Your Orders | Login |
Cart nav_bar_content: Help | Returns & Replacements | Manage Your
Content paragraphs_text: How can we assist you today? Please select a
topic below to find the help you need. span_text: Contact Us | Help Center |
Privacy Notice
Screenshot Info: The Amazon logo is clear and matches the official
branding. The customer service options are neatly organized with dropdown
menus. The "Contact Us" button uses Amazon's official orange color. The
footer contains legitimate Amazon links and legal information.
Brand Recognition Analysis: The page uses the official Amazon
logo with correct alt text. The URL matches the official Amazon domain with
HTTPS protocol. All branding elements are consistent with Amazon's official
style.
Diction and Syntax Analysis: The language is professional and consistent
with official Amazon communications. There is no excessive capitalization or
urgent language. Instructions for accessing customer service are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Amazon’s official
customer service page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Amazon domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 6
Url: https://www.facebook-login-secure.com/
HTML Data: title: Facebook - Secure Login meta_description: Log in
to your Facebook account securely. favicon:
https://www.facebook.com/favicon.ico logo_alt_text: Facebook Logo
footer_text: Not Found headers_text: Home | About | Jobs | Help
nav_bar_content: Not Found paragraphs_text: Please enter your Facebook
credentials to continue. span_text: Forgot Password? | Create New Account
| Help Center
Screenshot Info: The Facebook logo is high-resolution and matches official
branding. The login form includes fields for email and password. The "Log
In" button is styled with Facebook's official blue color. The footer lacks
additional information and links typically found on Facebook's official site.
Brand Recognition Analysis: The page uses the official Facebook
logo with correct alt text. The URL ("facebook-login-secure.com") is not an
official Facebook domain and uses HTTPS, which is misleading.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Facebook
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Facebook’s official login page.
However, the domain discrepancy and missing footer links raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Facebook logo.
2. The URL does not match Facebook’s official domain despite using
HTTPS.
3. Missing footer elements typical of Facebook's official site suggest
phishing.
Classification: PHISHING

Example 7
Url: https://www.microsoft.com/en-us/account/
HTML Data: title: Microsoft Account Sign In meta_description: Access
your Microsoft account securely. favicon:
https://www.microsoft.com/favicon.ico logo_alt_text: Microsoft Logo
footer_text: © 2024 Microsoft. All rights reserved. headers_text: Products |
Solutions | Support | Company nav_bar_content: Not Found
paragraphs_text: Sign in to your Microsoft account to access your services.
span_text: Forgot my password | Create one! | Need help?
Screenshot Info: The Microsoft logo is clear and matches official branding.
The login form is professionally designed with fields for email and
password. The "Sign In" button uses Microsoft's official color scheme. The
footer contains legitimate Microsoft links and legal information.
Brand Recognition Analysis: The page uses the official Microsoft
logo with correct alt text. The URL matches the official Microsoft domain
with HTTPS protocol. All branding elements are consistent with Microsoft’s
official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Microsoft communications. There is no excessive capitalization or
urgent language. Instructions for signing in are clear and straightforward.
Screenshot Analysis: Visual elements closely match Microsoft’s official
account sign-in page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Microsoft domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: BENIGN

Example 8
Url: http://www.instagram-loginpage.org/
HTML Data: title: Instagram - Login meta_description: Log in to your
Instagram account. favicon: https://www.instagram.com/favicon.ico
logo_alt_text: Instagram Logo footer_text: Not Found headers_text: Home |
About | Blog | Careers nav_bar_content: Not Found paragraphs_text: Enter
your Instagram username and password to continue. span_text: Forgot
Password? | Sign Up | Help Center
Screenshot Info: The Instagram logo is high-resolution and matches
official branding. The login form includes fields for username and password.
The "Log In" button is styled with Instagram's official colors. The footer
lacks additional information and links typically found on Instagram's official
site.
Brand Recognition Analysis: The page uses the official Instagram
logo with correct alt text. The URL ("instagram-loginpage.org") is not an
official Instagram domain and uses HTTP instead of HTTPS, which is
unusual for Instagram’s official login pages.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Instagram
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Instagram’s official login page.
However, the domain discrepancy and lack of secure HTTPS protocol raise
suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Instagram logo.
2. The URL does not match Instagram’s official domain and lacks
HTTPS.
3. Missing footer elements typical of Instagram's official site suggest
phishing.
Classification: PHISHING

    """

    # Current input data
    dynamic_prompt = f"""
    ### Current Input
    #### HTML Content:
    {html_content}
    #### Screenshot URL:
    {image_url}
    """

       # Final Prompt
    full_prompt = f"""
    You are a phishing detection assistant. From a dataset of phishing and benign urls, I will randomly select one and give you HTML and screenshot data from it (The screenshot data will be provided as a URL in a text file. It is your job to read the text file, access the url and analyze the screenshot it leads you to). Use the few shot examples below as guides on how to analyze the input data and determine the phishing risk. Split your analysis into brand recognition analysis, diction and syntax analysis, and screenshot specific analysis. Do not bias your decisions by only looking for aspects indicative of phishing or benign webpages. Look for both equally. Also, consider the absence of phishing aspects as an indicator for potentially benign sites. On the other side, consider the absence of benign aspects as an indicator for potential phishing sites.

    #### Analysis:

    {few_shot_prompt}

    {dynamic_prompt}

    #### Response Format (Follow this template exactly, do not change the words within the asterisks):
    1. *Step-by-Step Reasoning*: [Explain the URL, Brand Recognition, Diction and Syntax, and Screenshot analysis step-by-step, similar to fewshot prompts]
    2. *Phishing Risk (Phishing/Benign)*: [Ex. Classification: PHISHING]
    3. *Key Indicators*: [List diction/syntax observations]
    4. *Confidence Score*: [0.00 to 10.00 scale]
    5. *Supporting Evidence*: [Explanation within 300 words]
    6. *Provide URL*: [Ex. URL: https://www.amazon.com/]
    """


   # Initialize the Gemini model
    model = genai.GenerativeModel('gemini-1.5-pro')

    # Send the request to the Gemini API
    response = model.generate_content(full_prompt)

    # Extract and return the content from the response
    return response.text

# Function to extract the label from the AI response
def extract_label(analysis_result):
    # Look for "Phishing" or "Benign" in the response
    if "PHISHING" in analysis_result:
        return "Phishing"
    elif "BENIGN" in analysis_result:
        return "Benign"
    else:
        return "Unknown"  # Fallback if the label is not found

# Path to the dataset folder
dataset_path = '/content/drive/MyDrive/Ishan_Eval1/ReducedBenignDataSet'

# Path to the output folder
output_folder_path = '/content/drive/My Drive/BenignLinksResultsGemini'

# Create the output folder if it doesn't exist
if not os.path.exists(output_folder_path):
    os.makedirs(output_folder_path)
    print(f"Created output folder: {output_folder_path}")

# Path to the CSV file
csv_file_path = os.path.join(output_folder_path, "benign_resultsGemini1.csv")

# Initialize the CSV file with headers if it doesn't exist
if not os.path.exists(csv_file_path):
    with open(csv_file_path, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        csvwriter.writerow(["URL", "Label"])  # Write header

# Get a list of all folders in the dataset
all_folders = [f for f in os.listdir(dataset_path) if os.path.isdir(os.path.join(dataset_path, f))]

# Traverse through each folder in the dataset
for folder_name in all_folders:
    folder_path = os.path.join(dataset_path, folder_name)

    # Log the folder being processed
    print(f"Processing folder: {folder_name}")

    # Extract HTML content from .json file
    html_content = ""
    image_url = ""

    for file_name in os.listdir(folder_path):
        if file_name.endswith('.json'):
            with open(os.path.join(folder_path, file_name), 'r') as f:
                html_content = json.load(f)
        elif file_name == "image_url.txt":
            with open(os.path.join(folder_path, file_name), 'r') as f:
                image_url = f.read().strip()

    # Analyze the data
    if html_content and image_url:
        analysis_result = analyze_phishing_with_cot(html_content, image_url)

        # Extract the classification (Phishing/Benign) from the AI response
        label = extract_label(analysis_result)

        # Save all data (HTML, Screenshot URL, and AI Response) in a structured format
        result_entry = {
            "folder_name": folder_name,
            "ai_response": analysis_result
        }

        # Save results to a unique file in the output folder
        output_file_path = os.path.join(output_folder_path, f"BENIGN_{folder_name}_results.txt")
        with open(output_file_path, 'w') as f:
            f.write(f"Folder Name: {result_entry['folder_name']}\n")
            f.write(f"AI Response:\n{result_entry['ai_response']}\n\n")

        print(f"Results saved to {output_file_path}")

        # Append the result to the CSV file
        with open(csv_file_path, 'a', newline='') as csvfile:
            csvwriter = csv.writer(csvfile)
            csvwriter.writerow([folder_name, label])  # Append URL and Label

        print(f"Updated CSV file with: {folder_name}, {label}")

print("Analysis complete. All results saved to BenignLinksResults folder.")

"""### ChatGPT Model"""

#PHISHING

import os
import json
import csv
from google.colab import drive
import openai

# Mount Google Drive
drive.mount('/content/drive')

# Set your API key
openai.api_key = ""

# Define the function
def analyze_phishing_with_cot(html_content, image_url):
    # Few-shot examples
    few_shot_prompt = """

Example 1
Url: https://www.bankofamerica.com/login
HTML Data: title: Bank of America - Online Banking Login
meta_description: Secure login to your Bank of America account. favicon:
https://www.bankofamerica.com/favicon.ico logo_alt_text: Bank of America
Logo footer_text: © 2024 Bank of America. All rights reserved.
headers_text: Personal | Business | Small Business | Community Banking
nav_bar_content: Home | Services | Contact Us | Support paragraphs_text:
Welcome to Bank of America. Please enter your login credentials below to
access your account. span_text: Forgot Username? | Forgot Password? |
Help Center | Privacy Policy
Screenshot Info: The Bank of America logo is clear and matches the
official branding. The login form is professionally designed with fields for
username and password. The "Sign In" button uses Bank of America's
official color scheme. The footer contains legitimate Bank of America links
and legal information.
Brand Recognition Analysis: The page uses the official Bank of
America logo with correct alt text. The URL matches the official Bank of
America domain with HTTPS protocol. All branding elements are consistent
with Bank of America's official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Bank of America communications. There is no excessive
capitalization or urgent language. Instructions for logging in are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Bank of America’s
official login page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. The branding elements are consistent and legitimate.
2. The URL matches the official Bank of America domain with secure
HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 2
Url: https://secure-appleid-login.com/
HTML Data: title: Apple ID Login meta_description: Sign in to your
Apple ID account. favicon: https://www.apple.com/favicon.ico logo_alt_text:
Apple Logo footer_text: Not Found headers_text: Home | Support | Account |
Privacy nav_bar_content: Not Found paragraphs_text: Enter your Apple ID
and password to sign in. span_text: Forgot Apple ID? | Forgot Password? |
Sign Up
Screenshot Info: The Apple logo is high-resolution and matches official
branding. The login form includes fields for Apple ID and password. The
"Sign In" button is styled with Apple's official colors. The footer lacks
additional information and links typically found on Apple's official site.
Brand Recognition Analysis: The page uses the official Apple logo
with correct alt text. The URL ("secure-appleid-login.com") is not an official
Apple domain. HTTPS protocol is absent, which is unusual for Apple’s
official login pages.
Diction and Syntax Analysis: The language is straightforward without
excessive capitalization. Instructions are clear and mimic official Apple
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements largely mimic Apple’s official login
page. However, the absence of additional footer links and the domain
discrepancy raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Apple logo.
2. The URL does not match Apple’s official domain and lacks HTTPS.
3. Missing footer elements typical of Apple's official site suggest
phishing.
Classification: Phishing

Example 3
Url: https://www.netflix.com/billing-update
HTML Data: title: Netflix - Update Your Billing Information
meta_description: Securely update your billing details for uninterrupted
service. favicon: https://www.netflix.com/favicon.ico logo_alt_text: Netflix
Logo footer_text: © 2024 Netflix, Inc. headers_text: Home | TV Shows |
Movies | Latest nav_bar_content: Not Found paragraphs_text: To continue
enjoying Netflix, please update your billing information below. span_text:
Need Help? | Contact Support | Privacy Policy
Screenshot Info: The Netflix logo is high-resolution and matches official
branding. The billing update form includes fields for credit card information
and billing address. The "Update Billing" button is styled with Netflix's
official red color. The footer contains legitimate Netflix links and legal
information.
Brand Recognition Analysis: The page uses the official Netflix
logo with correct alt text. The URL ("netflix.com/billing-update") uses the
official Netflix domain with HTTPS protocol. All branding elements are
consistent with Netflix's official style.
Diction and Syntax Analysis: The language is professional and consistent
with official Netflix communications. There is no excessive capitalization or
urgent language. Instructions for updating billing information are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Netflix’s official billing
update page. The design is professional, and all elements are consistent
with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Netflix domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 4
Url: http://www.paypalsecure-login.net/
HTML Data: title: PayPal Secure Login meta_description: Access your
PayPal account securely. favicon: https://www.paypal.com/favicon.ico
logo_alt_text: PayPal Logo footer_text: Not Found headers_text: Home |
Send & Request | Wallet | Security nav_bar_content: Not Found
paragraphs_text: Please enter your PayPal credentials to continue.
span_text: Forgot Password? | Sign Up | Help Center
Screenshot Info: The PayPal logo appears sharp and matches the official
branding. The login form is centered with fields for email and password.
The "Login" button uses PayPal's official blue color. The footer lacks
additional information and links typically found on PayPal's official site.
Brand Recognition Analysis: The page uses the official PayPal
logo with correct alt text. The URL ("paypalsecure-login.net") is not an
official PayPal domain and uses HTTP instead of HTTPS.
Diction and Syntax Analysis: The language is professional with no excessive
capitalization. Instructions are clear and similar to official PayPal
communications. No urgent or threatening language is detected.
Screenshot Analysis: Visual elements mimic PayPal’s official login page.
However, the domain name discrepancy and lack of secure HTTPS protocol
raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct PayPal logo.
2. The URL does not match PayPal’s official domain and lacks HTTPS.
3. Missing footer elements typical of PayPal's official site suggest
phishing.
Classification: Phishing

Example 5
Url: https://www.amazon.com/gp/help/customer/display.html
HTML Data: title: Amazon Customer Service meta_description: Find
solutions to your Amazon account issues. favicon:
https://www.amazon.com/favicon.ico logo_alt_text: Amazon Logo footer_text:
© 2024 Amazon.com, Inc. or its affiliates headers_text: Your Orders | Login |
Cart nav_bar_content: Help | Returns & Replacements | Manage Your
Content paragraphs_text: How can we assist you today? Please select a
topic below to find the help you need. span_text: Contact Us | Help Center |
Privacy Notice
Screenshot Info: The Amazon logo is clear and matches the official
branding. The customer service options are neatly organized with dropdown
menus. The "Contact Us" button uses Amazon's official orange color. The
footer contains legitimate Amazon links and legal information.
Brand Recognition Analysis: The page uses the official Amazon
logo with correct alt text. The URL matches the official Amazon domain with
HTTPS protocol. All branding elements are consistent with Amazon's official
style.
Diction and Syntax Analysis: The language is professional and consistent
with official Amazon communications. There is no excessive capitalization or
urgent language. Instructions for accessing customer service are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Amazon’s official
customer service page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Amazon domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 6
Url: https://www.facebook-login-secure.com/
HTML Data: title: Facebook - Secure Login meta_description: Log in
to your Facebook account securely. favicon:
https://www.facebook.com/favicon.ico logo_alt_text: Facebook Logo
footer_text: Not Found headers_text: Home | About | Jobs | Help
nav_bar_content: Not Found paragraphs_text: Please enter your Facebook
credentials to continue. span_text: Forgot Password? | Create New Account
| Help Center
Screenshot Info: The Facebook logo is high-resolution and matches official
branding. The login form includes fields for email and password. The "Log
In" button is styled with Facebook's official blue color. The footer lacks
additional information and links typically found on Facebook's official site.
Brand Recognition Analysis: The page uses the official Facebook
logo with correct alt text. The URL ("facebook-login-secure.com") is not an
official Facebook domain and uses HTTPS, which is misleading.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Facebook
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Facebook’s official login page.
However, the domain discrepancy and missing footer links raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Facebook logo.
2. The URL does not match Facebook’s official domain despite using
HTTPS.
3. Missing footer elements typical of Facebook's official site suggest
phishing.
Classification: Phishing

Example 7
Url: https://www.microsoft.com/en-us/account/
HTML Data: title: Microsoft Account Sign In meta_description: Access
your Microsoft account securely. favicon:
https://www.microsoft.com/favicon.ico logo_alt_text: Microsoft Logo
footer_text: © 2024 Microsoft. All rights reserved. headers_text: Products |
Solutions | Support | Company nav_bar_content: Not Found
paragraphs_text: Sign in to your Microsoft account to access your services.
span_text: Forgot my password | Create one! | Need help?
Screenshot Info: The Microsoft logo is clear and matches official branding.
The login form is professionally designed with fields for email and
password. The "Sign In" button uses Microsoft's official color scheme. The
footer contains legitimate Microsoft links and legal information.
Brand Recognition Analysis: The page uses the official Microsoft
logo with correct alt text. The URL matches the official Microsoft domain
with HTTPS protocol. All branding elements are consistent with Microsoft’s
official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Microsoft communications. There is no excessive capitalization or
urgent language. Instructions for signing in are clear and straightforward.
Screenshot Analysis: Visual elements closely match Microsoft’s official
account sign-in page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Microsoft domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 8
Url: http://www.instagram-loginpage.org/
HTML Data: title: Instagram - Login meta_description: Log in to your
Instagram account. favicon: https://www.instagram.com/favicon.ico
logo_alt_text: Instagram Logo footer_text: Not Found headers_text: Home |
About | Blog | Careers nav_bar_content: Not Found paragraphs_text: Enter
your Instagram username and password to continue. span_text: Forgot
Password? | Sign Up | Help Center
Screenshot Info: The Instagram logo is high-resolution and matches
official branding. The login form includes fields for username and password.
The "Log In" button is styled with Instagram's official colors. The footer
lacks additional information and links typically found on Instagram's official
site.
Brand Recognition Analysis: The page uses the official Instagram
logo with correct alt text. The URL ("instagram-loginpage.org") is not an
official Instagram domain and uses HTTP instead of HTTPS, which is
unusual for Instagram’s official login pages.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Instagram
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Instagram’s official login page.
However, the domain discrepancy and lack of secure HTTPS protocol raise
suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Instagram logo.
2. The URL does not match Instagram’s official domain and lacks
HTTPS.
3. Missing footer elements typical of Instagram's official site suggest
phishing.
Classification: Phishing

    """

    # Current input data
    dynamic_prompt = f"""
    ### Current Input
    #### HTML Content:
    {html_content}
    #### Screenshot URL:
    {image_url}
    """

       # Final Prompt
    full_prompt = f"""
    You are a phishing detection assistant. From a dataset of phishing and benign urls, I will randomly select one and give you HTML and screenshot data from it (The screenshot data will be provided as a URL in a text file. It is your job to read the text file, access the url and analyze the screenshot it leads you to). Use the few shot examples below as guides on how to analyze the input data and determine the phishing risk. Split your analysis into brand recognition analysis, diction and syntax analysis, and screenshot specific analysis. Do not bias your decisions by only looking for aspects indicative of phishing or benign webpages. Look for both equally. Also, consider the absence of phishing aspects as an indicator for potentially benign sites. On the other side, consider the absence of benign aspects as an indicator for potential phishing sites.

    #### Analysis:

    {few_shot_prompt}

    {dynamic_prompt}

    #### Response Format (Follow this template exactly, do not change the words within the asterisks):
    1. *Step-by-Step Reasoning*: [Explain the URL, Brand Recognition, Diction and Syntax, and Screenshot analysis step-by-step, similar to fewshot prompts]
    2. *Phishing Risk (Phishing/Benign)*: [Ex. Classification: Benign]
    3. *Key Indicators*: [List diction/syntax observations]
    4. *Confidence Score*: [0.00 to 10.00 scale]
    5. *Supporting Evidence*: [Explanation within 300 words]
    6. *Provide URL*: [Ex. URL: https://www.amazon.com/]
    """


    # Send the request to the OpenAI API
    response = openai.ChatCompletion.create(
        model="gpt-4o-mini-2024-07-18",
        messages=[{"role": "user", "content": full_prompt}],
        max_tokens=1000,
        temperature=0.4
    )

    # Extract and return the content from the response
    return response['choices'][0]['message']['content']

# Function to extract the label from the AI response
def extract_label(analysis_result):
    # Look for "Phishing" or "Benign" in the response
    if "PHISHING" in analysis_result:
        return "Phishing"
    elif "BENIGN" in analysis_result:
        return "Benign"
    else:
        return "Unknown"  # Fallback if the label is not found

# Path to the dataset folder
dataset_path = '/content/drive/MyDrive/Ishan_Eval1/ReducedPhishingDataSet'

# Path to the output folder
output_folder_path = '/content/drive/My Drive/PhishingLinksResults12'

# Create the output folder if it doesn't exist
if not os.path.exists(output_folder_path):
    os.makedirs(output_folder_path)
    print(f"Created output folder: {output_folder_path}")

# Path to the CSV file
csv_file_path = os.path.join(output_folder_path, "phishing_results22.csv")

# Initialize the CSV file with headers if it doesn't exist
if not os.path.exists(csv_file_path):
    with open(csv_file_path, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        csvwriter.writerow(["URL", "Label"])  # Write header

# Get a list of all folders in the dataset
all_folders = [f for f in os.listdir(dataset_path) if os.path.isdir(os.path.join(dataset_path, f))]

# Traverse through each folder in the dataset
for folder_name in all_folders:
    folder_path = os.path.join(dataset_path, folder_name)

    # Log the folder being processed
    print(f"Processing folder: {folder_name}")

    # Extract HTML content from .json file
    html_content = ""
    image_url = ""

    for file_name in os.listdir(folder_path):
        if file_name.endswith('.json'):
            with open(os.path.join(folder_path, file_name), 'r') as f:
                html_content = json.load(f)
        elif file_name == "image_url.txt":
            with open(os.path.join(folder_path, file_name), 'r') as f:
                image_url = f.read().strip()

    # Analyze the data
    if html_content and image_url:
        analysis_result = analyze_phishing_with_cot(html_content, image_url)

        # Extract the classification (Phishing/Benign) from the AI response
        label = extract_label(analysis_result)

        # Save all data (HTML, Screenshot URL, and AI Response) in a structured format
        result_entry = {
            "folder_name": folder_name,
            "ai_response": analysis_result
        }

        # Save results to a unique file in the output folder
        output_file_path = os.path.join(output_folder_path, f"PHISHING_{folder_name}_results.txt")
        with open(output_file_path, 'w') as f:
            f.write(f"Folder Name: {result_entry['folder_name']}\n")
            f.write(f"AI Response:\n{result_entry['ai_response']}\n\n")

        print(f"Results saved to {output_file_path}")

        # Append the result to the CSV file
        with open(csv_file_path, 'a', newline='') as csvfile:
            csvwriter = csv.writer(csvfile)
            csvwriter.writerow([folder_name, label])  # Append URL and Label

        print(f"Updated CSV file with: {folder_name}, {label}")

print("Analysis complete. All results saved to PhishingLinksResults folder.")

#BENIGN

import os
import json
import csv
from google.colab import drive
import openai

# Mount Google Drive
drive.mount('/content/drive')

# Set your API key
openai.api_key = ""

# Define the function
def analyze_phishing_with_cot(html_content, image_url):
    # Few-shot examples
    few_shot_prompt = """

Example 1
Url: https://www.bankofamerica.com/login
HTML Data: title: Bank of America - Online Banking Login
meta_description: Secure login to your Bank of America account. favicon:
https://www.bankofamerica.com/favicon.ico logo_alt_text: Bank of America
Logo footer_text: © 2024 Bank of America. All rights reserved.
headers_text: Personal | Business | Small Business | Community Banking
nav_bar_content: Home | Services | Contact Us | Support paragraphs_text:
Welcome to Bank of America. Please enter your login credentials below to
access your account. span_text: Forgot Username? | Forgot Password? |
Help Center | Privacy Policy
Screenshot Info: The Bank of America logo is clear and matches the
official branding. The login form is professionally designed with fields for
username and password. The "Sign In" button uses Bank of America's
official color scheme. The footer contains legitimate Bank of America links
and legal information.
Brand Recognition Analysis: The page uses the official Bank of
America logo with correct alt text. The URL matches the official Bank of
America domain with HTTPS protocol. All branding elements are consistent
with Bank of America's official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Bank of America communications. There is no excessive
capitalization or urgent language. Instructions for logging in are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Bank of America’s
official login page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. The branding elements are consistent and legitimate.
2. The URL matches the official Bank of America domain with secure
HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 2
Url: https://secure-appleid-login.com/
HTML Data: title: Apple ID Login meta_description: Sign in to your
Apple ID account. favicon: https://www.apple.com/favicon.ico logo_alt_text:
Apple Logo footer_text: Not Found headers_text: Home | Support | Account |
Privacy nav_bar_content: Not Found paragraphs_text: Enter your Apple ID
and password to sign in. span_text: Forgot Apple ID? | Forgot Password? |
Sign Up
Screenshot Info: The Apple logo is high-resolution and matches official
branding. The login form includes fields for Apple ID and password. The
"Sign In" button is styled with Apple's official colors. The footer lacks
additional information and links typically found on Apple's official site.
Brand Recognition Analysis: The page uses the official Apple logo
with correct alt text. The URL ("secure-appleid-login.com") is not an official
Apple domain. HTTPS protocol is absent, which is unusual for Apple’s
official login pages.
Diction and Syntax Analysis: The language is straightforward without
excessive capitalization. Instructions are clear and mimic official Apple
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements largely mimic Apple’s official login
page. However, the absence of additional footer links and the domain
discrepancy raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Apple logo.
2. The URL does not match Apple’s official domain and lacks HTTPS.
3. Missing footer elements typical of Apple's official site suggest
phishing.
Classification: Phishing

Example 3
Url: https://www.netflix.com/billing-update
HTML Data: title: Netflix - Update Your Billing Information
meta_description: Securely update your billing details for uninterrupted
service. favicon: https://www.netflix.com/favicon.ico logo_alt_text: Netflix
Logo footer_text: © 2024 Netflix, Inc. headers_text: Home | TV Shows |
Movies | Latest nav_bar_content: Not Found paragraphs_text: To continue
enjoying Netflix, please update your billing information below. span_text:
Need Help? | Contact Support | Privacy Policy
Screenshot Info: The Netflix logo is high-resolution and matches official
branding. The billing update form includes fields for credit card information
and billing address. The "Update Billing" button is styled with Netflix's
official red color. The footer contains legitimate Netflix links and legal
information.
Brand Recognition Analysis: The page uses the official Netflix
logo with correct alt text. The URL ("netflix.com/billing-update") uses the
official Netflix domain with HTTPS protocol. All branding elements are
consistent with Netflix's official style.
Diction and Syntax Analysis: The language is professional and consistent
with official Netflix communications. There is no excessive capitalization or
urgent language. Instructions for updating billing information are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Netflix’s official billing
update page. The design is professional, and all elements are consistent
with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Netflix domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 4
Url: http://www.paypalsecure-login.net/
HTML Data: title: PayPal Secure Login meta_description: Access your
PayPal account securely. favicon: https://www.paypal.com/favicon.ico
logo_alt_text: PayPal Logo footer_text: Not Found headers_text: Home |
Send & Request | Wallet | Security nav_bar_content: Not Found
paragraphs_text: Please enter your PayPal credentials to continue.
span_text: Forgot Password? | Sign Up | Help Center
Screenshot Info: The PayPal logo appears sharp and matches the official
branding. The login form is centered with fields for email and password.
The "Login" button uses PayPal's official blue color. The footer lacks
additional information and links typically found on PayPal's official site.
Brand Recognition Analysis: The page uses the official PayPal
logo with correct alt text. The URL ("paypalsecure-login.net") is not an
official PayPal domain and uses HTTP instead of HTTPS.
Diction and Syntax Analysis: The language is professional with no excessive
capitalization. Instructions are clear and similar to official PayPal
communications. No urgent or threatening language is detected.
Screenshot Analysis: Visual elements mimic PayPal’s official login page.
However, the domain name discrepancy and lack of secure HTTPS protocol
raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct PayPal logo.
2. The URL does not match PayPal’s official domain and lacks HTTPS.
3. Missing footer elements typical of PayPal's official site suggest
phishing.
Classification: Phishing

Example 5
Url: https://www.amazon.com/gp/help/customer/display.html
HTML Data: title: Amazon Customer Service meta_description: Find
solutions to your Amazon account issues. favicon:
https://www.amazon.com/favicon.ico logo_alt_text: Amazon Logo footer_text:
© 2024 Amazon.com, Inc. or its affiliates headers_text: Your Orders | Login |
Cart nav_bar_content: Help | Returns & Replacements | Manage Your
Content paragraphs_text: How can we assist you today? Please select a
topic below to find the help you need. span_text: Contact Us | Help Center |
Privacy Notice
Screenshot Info: The Amazon logo is clear and matches the official
branding. The customer service options are neatly organized with dropdown
menus. The "Contact Us" button uses Amazon's official orange color. The
footer contains legitimate Amazon links and legal information.
Brand Recognition Analysis: The page uses the official Amazon
logo with correct alt text. The URL matches the official Amazon domain with
HTTPS protocol. All branding elements are consistent with Amazon's official
style.
Diction and Syntax Analysis: The language is professional and consistent
with official Amazon communications. There is no excessive capitalization or
urgent language. Instructions for accessing customer service are clear and
straightforward.
Screenshot Analysis: Visual elements closely match Amazon’s official
customer service page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Amazon domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 6
Url: https://www.facebook-login-secure.com/
HTML Data: title: Facebook - Secure Login meta_description: Log in
to your Facebook account securely. favicon:
https://www.facebook.com/favicon.ico logo_alt_text: Facebook Logo
footer_text: Not Found headers_text: Home | About | Jobs | Help
nav_bar_content: Not Found paragraphs_text: Please enter your Facebook
credentials to continue. span_text: Forgot Password? | Create New Account
| Help Center
Screenshot Info: The Facebook logo is high-resolution and matches official
branding. The login form includes fields for email and password. The "Log
In" button is styled with Facebook's official blue color. The footer lacks
additional information and links typically found on Facebook's official site.
Brand Recognition Analysis: The page uses the official Facebook
logo with correct alt text. The URL ("facebook-login-secure.com") is not an
official Facebook domain and uses HTTPS, which is misleading.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Facebook
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Facebook’s official login page.
However, the domain discrepancy and missing footer links raise suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Facebook logo.
2. The URL does not match Facebook’s official domain despite using
HTTPS.
3. Missing footer elements typical of Facebook's official site suggest
phishing.
Classification: Phishing

Example 7
Url: https://www.microsoft.com/en-us/account/
HTML Data: title: Microsoft Account Sign In meta_description: Access
your Microsoft account securely. favicon:
https://www.microsoft.com/favicon.ico logo_alt_text: Microsoft Logo
footer_text: © 2024 Microsoft. All rights reserved. headers_text: Products |
Solutions | Support | Company nav_bar_content: Not Found
paragraphs_text: Sign in to your Microsoft account to access your services.
span_text: Forgot my password | Create one! | Need help?
Screenshot Info: The Microsoft logo is clear and matches official branding.
The login form is professionally designed with fields for email and
password. The "Sign In" button uses Microsoft's official color scheme. The
footer contains legitimate Microsoft links and legal information.
Brand Recognition Analysis: The page uses the official Microsoft
logo with correct alt text. The URL matches the official Microsoft domain
with HTTPS protocol. All branding elements are consistent with Microsoft’s
official style.
Diction and Syntax Analysis: The language is formal and consistent with
official Microsoft communications. There is no excessive capitalization or
urgent language. Instructions for signing in are clear and straightforward.
Screenshot Analysis: Visual elements closely match Microsoft’s official
account sign-in page. The design is professional, and all elements are
consistent with the official branding.
Step-by-Step Reasoning:
1. Branding elements are consistent and legitimate.
2. The URL matches the official Microsoft domain with secure HTTPS.
3. The visual design and language are authentic, indicating a benign
page.
Classification: Benign

Example 8
Url: http://www.instagram-loginpage.org/
HTML Data: title: Instagram - Login meta_description: Log in to your
Instagram account. favicon: https://www.instagram.com/favicon.ico
logo_alt_text: Instagram Logo footer_text: Not Found headers_text: Home |
About | Blog | Careers nav_bar_content: Not Found paragraphs_text: Enter
your Instagram username and password to continue. span_text: Forgot
Password? | Sign Up | Help Center
Screenshot Info: The Instagram logo is high-resolution and matches
official branding. The login form includes fields for username and password.
The "Log In" button is styled with Instagram's official colors. The footer
lacks additional information and links typically found on Instagram's official
site.
Brand Recognition Analysis: The page uses the official Instagram
logo with correct alt text. The URL ("instagram-loginpage.org") is not an
official Instagram domain and uses HTTP instead of HTTPS, which is
unusual for Instagram’s official login pages.
Diction and Syntax Analysis: The language is clear and professional without
excessive capitalization. Instructions mimic official Instagram
communications. There is no urgent or threatening language detected.
Screenshot Analysis: Visual elements mimic Instagram’s official login page.
However, the domain discrepancy and lack of secure HTTPS protocol raise
suspicion.
Step-by-Step Reasoning:
1. Branding elements appear legitimate with a correct Instagram logo.
2. The URL does not match Instagram’s official domain and lacks
HTTPS.
3. Missing footer elements typical of Instagram's official site suggest
phishing.
Classification: Phishing

    """

    # Current input data
    dynamic_prompt = f"""
    ### Current Input
    #### HTML Content:
    {html_content}
    #### Screenshot URL:
    {image_url}
    """

       # Final Prompt
    full_prompt = f"""
    You are a phishing detection assistant. From a dataset of phishing and benign urls, I will randomly select one and give you HTML and screenshot data from it (The screenshot data will be provided as a URL in a text file. It is your job to read the text file, access the url and analyze the screenshot it leads you to). Use the few shot examples below as guides on how to analyze the input data and determine the phishing risk. Split your analysis into brand recognition analysis, diction and syntax analysis, and screenshot specific analysis. Do not bias your decisions by only looking for aspects indicative of phishing or benign webpages. Look for both equally. Also, consider the absence of phishing aspects as an indicator for potentially benign sites. On the other side, consider the absence of benign aspects as an indicator for potential phishing sites.

    #### Analysis:

    {few_shot_prompt}

    {dynamic_prompt}

    #### Response Format (Follow this template exactly, do not change the words within the asterisks):
    1. *Step-by-Step Reasoning*: [Explain the URL, Brand Recognition, Diction and Syntax, and Screenshot analysis step-by-step, similar to fewshot prompts]
    2. *Phishing Risk (Phishing/Benign)*: [Ex. Classification: Benign]
    3. *Key Indicators*: [List diction/syntax observations]
    4. *Confidence Score*: [0.00 to 10.00 scale]
    5. *Supporting Evidence*: [Explanation within 300 words]
    6. *Provide URL*: [Ex. URL: https://www.amazon.com/]
    """

    # Send the request to the OpenAI API
    response = openai.ChatCompletion.create(
        model="gpt-4o-2024-07-18",
        messages=[{"role": "user", "content": full_prompt}],
        max_tokens=1000,
        temperature=0.6
    )

    # Extract and return the content from the response
    return response['choices'][0]['message']['content']

# Function to extract the label from the AI response
def extract_label(analysis_result):
    # Look for "Phishing" or "Benign" in the response
    if "Classification: Phishing" in analysis_result:
        return "Phishing"
    elif "Classification: Benign" in analysis_result:
        return "Benign"
    else:
        return "Unknown"  # Fallback if the label is not found

# Path to the dataset folder
dataset_path = '/content/drive/MyDrive/Ishan_Eval1/ReducedBenignDataSet'

# Path to the output folder
output_folder_path = '/content/drive/My Drive/BenignLinksResults4'

# Create the output folder if it doesn't exist
if not os.path.exists(output_folder_path):
    os.makedirs(output_folder_path)
    print(f"Created output folder: {output_folder_path}")

# Path to the CSV file
csv_file_path = os.path.join(output_folder_path, "benign_results14.csv")

# Initialize the CSV file with headers if it doesn't exist
if not os.path.exists(csv_file_path):
    with open(csv_file_path, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        csvwriter.writerow(["URL", "Label"])  # Write header

# Get a list of all folders in the dataset
all_folders = [f for f in os.listdir(dataset_path) if os.path.isdir(os.path.join(dataset_path, f))]

# Traverse through each folder in the dataset
for folder_name in all_folders:
    folder_path = os.path.join(dataset_path, folder_name)

    # Log the folder being processed
    print(f"Processing folder: {folder_name}")

    # Extract HTML content from .json file
    html_content = ""
    image_url = ""

    for file_name in os.listdir(folder_path):
        if file_name.endswith('.json'):
            with open(os.path.join(folder_path, file_name), 'r') as f:
                html_content = json.load(f)
        elif file_name == "image_url.txt":
            with open(os.path.join(folder_path, file_name), 'r') as f:
                image_url = f.read().strip()

    # Analyze the data
    if html_content and image_url:
        analysis_result = analyze_phishing_with_cot(html_content, image_url)

        # Extract the classification (Phishing/Benign) from the AI response
        label = extract_label(analysis_result)

        # Save all data (HTML, Screenshot URL, and AI Response) in a structured format
        result_entry = {
            "folder_name": folder_name,
            "ai_response": analysis_result
        }

        # Save results to a unique file in the output folder
        output_file_path = os.path.join(output_folder_path, f"BENIGN_{folder_name}_results.txt")
        with open(output_file_path, 'w') as f:
            f.write(f"Folder Name: {result_entry['folder_name']}\n")
            f.write(f"AI Response:\n{result_entry['ai_response']}\n\n")

        print(f"Results saved to {output_file_path}")

        # Append the result to the CSV file
        with open(csv_file_path, 'a', newline='') as csvfile:
            csvwriter = csv.writer(csvfile)
            csvwriter.writerow([folder_name, label])  # Append URL and Label

        print(f"Updated CSV file with: {folder_name}, {label}")

print("Analysis complete. All results saved to BenignLinksResults folder.")